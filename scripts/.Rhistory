rm(list = ls())
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE)
install.packages('dplyr')
install.packages('tidyr')
install.packages('lubridate')
install.packages('purrr')
install.packages("purrr")
install.packages('ggplot2')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = FALSE)
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
grp_pars2.0
grp_pars2.0.rda
library(ABM)
grp_pars2.0
outside_slurry_temp
abm(grp_pars = grp_pars2.0)
out <- abm(grp_pars = grp_pars2.0)
plot(out$time, out$CH4_emis_rate)
mean(out$CH4_emis_rate/1000)
mean(out$CH4_emis_rate/1000, na.rm = T)
plot(out$slurry_mass/1000)
5.5/1000
5500/1000
650*1.1
remove.pacakges('ABM')
remove.packages('ABM')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
library('ABM')
man_pars2.0
conc_fresh <- man_pars2.0$conc_fresh
View(conc_fresh)
View(conc_fresh)
conc_fresh$time <- c(0,100)
lapply(conc_fresh, rep(x,2))
lapply(conc_fresh, function(x) rep(x,2))
conc_fresh <- man_pars2.0$conc_fresh
conc_fresh <- lapply(conc_fresh, function(x) rep(x,2))
conc_fresh$time <- c(0,100)
abm(100, add_pars = list(conc_fresh = conc_fresh))
conc_fresh <- as.data.frame(conc_fresh)
abm(100, add_pars = list(conc_fresh = conc_fresh))
man_pars$conc_fresh <- conc_fresh
man_pars2.0$conc_fresh <- conc_fresh
abm(100, man_pars = man_pars2.0)
out2a <- abm(365)
out2b <- abm(365, add_pars = list(conc_fresh.VFA = 10))
plot(VFA_conc ~ time, data = out2a, type = 'l', xlab = 'Time (d)', ylab = 'VFA conc. (g/kg)', ylim = c(0,20))
lines(out2b$time, out2b$VFA_conc, col = "red")
remove.packages('ABM')
library(abm)
library(ABM)
test <- abm(365, add_pars = list(ki_NH4_max = 3))
plot(test$time, test$NH4_inhib_m0)
plot(test$time, test$NH4_inhib_m1)
test <- abm(365, add_pars = list(ki_NH4_max = 3, conc_fresh.TAN = 0.6))
plot(test$time, test$NH4_inhib_m1)
test <- abm(365, add_pars = list(ki_NH4_max = 3, conc_fresh.TAN = 2))
plot(test$time, test$NH4_inhib_m1)
plot(test$time, test$NH4_inhib_m0)
test <- abm(365, add_pars = list(ki_NH4_max = 3, conc_fresh.TAN = 2))
test <- abm(365, add_pars = list(ki_NH4_max = 3, conc_fresh.TAN = 2))
test2 <- abm(365, add_pars = list(ki_NH4_max = 10, conc_fresh.TAN = 2))
plot(test$time, test$NH4_inhib_m0)
plot(test$time, test$NH4_inhib_m0)
lines(test2$time, test2$NH4_inhib_m0 )
test <- abm(365, add_pars = list(ki_NH4_max = 2.7, conc_fresh.TAN = 2))
test2 <- abm(365, add_pars = list(ki_NH4_max = 10, conc_fresh.TAN = 2))
plot(test$time, test$NH4_inhib_m0)
lines(test2$time, test2$NH4_inhib_m0 )
plot(test$time, test$NH4_inhib_m1)
lines(test2$time, test2$NH4_inhib_m0 )
test <- abm(365, add_pars = list(ki_NH4_max.m2 = 3, conc_fresh.TAN = 2))
test2 <- abm(365, add_pars = list(ki_NH4_max.m2 = 10, conc_fresh.TAN = 2))
plot(test$time, test$NH4_inhib_m2)
lines(test2$time, test2$NH4_inhib_m2 )
fpd <- 'C16 H27 O8.7 N' # average manure
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
library(biogas)
fpd <- 'C16 H27 O8.7 N' # average manure
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
library(biogas)
install.packages('biogas')
fpd <- 'C16 H27 O8.7 N' # average manure
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
library(biogas)
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
molMass('CO2') * 16
molMass('CO2')
molMass(fpd)
calcCOD(fpd)
molMass(fpd)
fpd <- 'C16 H27 O8.7 N' # average manure
molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
fs0 <- 0.65 # from rittman
P_CO2_O2 <- (1-fs0) * molMass('CO2') * 16 / (calcCOD(fpd) * molMass(fpd))
library(reactran)
install.packages('reactran')
install.packages('ReacTran')
library('ReacTran')
?`ReacTran-package`
library(biogas)
?biogas
biogas
?biogas
??biogas
library(ABM)
grp_pars2.0
abm()
?abm
grp_pars2.0
?optim
devtools::source_url('https://raw.githubusercontent.com/AU-BCE-EE/guidance/main/Picarro/PicarroFunction.R')
library('biogas')
calcCOD('C2H4O2')
calcCOD('C2H4O2')*59.044
colcCOD('H2')
calcCOD('H2')
calcCOD('H2')*2
.libPaths()
.libPaths("C:/Program Files/R/R-4.3.1/library")
.libPaths()
.libPaths()
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages('devtools')
install.packages("devtools")
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
install.packages('vctrs')
install.packages("vctrs")
install.packages('devtools')
devtools::install_github('AU-BCE-EE/ABM', build_vignettes = TRUE)
.libPaths()
rm(list = ls())
# Load R libraries
library('ABM')
library('ggplot2')
library('dplyr')
library('tidyr')
library('readxl')
library('lubridate')
library('data.table')
# Source functions
source('ABM2D.R')
source('large.R')
source('int_temp.R')
ff <- list.files('../data/original')
rm(list = ls())
library(data.table)
ff <- list.files('../data/original')
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-KVIK/scripts")
rm(list = ls())
library(data.table)
ff <- list.files('../data/original')
ff <- list.files('../data/original', full.names = T)
dat <- fread(ff)
library(readxl)
read_excel(ff)
dat <- read_excel(ff)
write.csv('../data/data.csv')
ff <- list.files(dat, '../data/original', full.names = T)
ff <- list.files(dat, '../data/dat.csv', full.names = T)
ff <- list.files(dat, '../data/original', full.names = T)
rm(list = ls())
library(data.table)
library(readxl)
ff <- list.files(dat, '../data/original', full.names = T)
ff <- list.files('../data/original', full.names = T)
dat <- read_excel(ff)
write.csv('../data/data.csv', row.names = F)
write.csv(dat, '../data/data.csv', row.names = F)
fread('../data/dat.csv')
rm(list = ls())
library(data.table)
fread('../data/dat.csv')
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-KVIK/scripts")
rm(list = ls())
library(data.table)
fread('../data/dat.csv')
fread('../data/data.csv')
dat <- fread('../data/data.csv')
rm(list = ls())
library(data.table)
dat <- excel_read('../data/original/Til Anders Peter og Frederik 14122023.xlsx')
library(readxl)
dat <- excel_read('../data/original/Til Anders Peter og Frederik 14122023.xlsx')
dat <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx')
dat <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1)
dat <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2)
dat_anim <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1)
View(dat_anim)
dat_VS <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1)
dat_anim <- read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1)
View(dat_anim)
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim))
View(dat)
View(dat_anim)
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim))
View(dat)
View(dat_VS)
View(dat)
which(!dat_VS$DyrNavn %in% dat$DyrNavn )
View(dat)
View(dat_VS)
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim), by.x = "DyrNavn")
View(dat_anim)
View(dat_anim)
View(dat)
View(dat_anim)
View(dat_VS)
View(dat)
View(dat_VS)
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim), by.x = "DyrNavn", by.y = 'FirstOfAntalDyr')
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim))
?merge.data.table
dat <- merge.data.table(data.table(dat_VS), data.table(dat_anim), all.x = TRUE)
View(dat)
class(dat_anim$FirstOfAntalDyr)
dat_anim$FirstOfAntalDyr
View(dat_anim)
View(dat_VS)
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
#do names match?
dat_VS$DyrID %in% dat_anim$DyrID
#do names match?
dat_anim$DyrID %in% dat_VS$DyrID# %in% dat_anim$DyrID
dat_VS$DyrNavn %in% dat_anim$DyrNavn
dat_VS$StaldNavn %in% dat_anim$StaldNavn
#do ID names match?
dat_VS[DyrNavn]
#do ID names match?
dat_VS[, DyrNavn]
#do ID names match?
dat_anim[DyrNavn == 'Smågrise'], ]
#do ID names match?
dat_anim[DyrNavn == 'Smågrise']
#do ID names match?
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim$DyrNavn
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat_anim$DyrNavn
dat <- merge.data.table(dat_VS, dat_anim)
View(dat_VS)
View(dat)
dat[DyrID %in% c(64, 65)]
dat[StaldID %in% c(64, 65)]
View(dat)
View(dat)
View(dat)
View(dat)
View(dat_anim)
View(dat)
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('Ndyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
dat[StaldID %in% c(64, 65), sum()]
dat[StaldID %in% c(64, 65), sum(GoednabDyr)]
dat[StaldID %in% c(64, 65), sum(NDyr)]
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
#do ID names match?
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat <- merge.data.table(dat_VS, dat_anim)
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('Ndyr', 'GoednabDyr', 'TSabDyr')
View(dat_anim)
setnames(dat, old = old_names, new = new_names)
dat[StaldID %in% c(64, 65), sum(NDyr)]
View(dat)
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
dat <- merge.data.table(dat_VS, dat_anim)
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
dat[StaldID %in% c(64, 65), sum(NDyr)]
NDyr_farestald <- dat[StaldID %in% c(64, 65), sum(NDyr)]
View(dat)
View(dat)
NDyr_farestald <- dat[StaldID %in% c(64, 65) & !duplicated(StaldID), sum(NDyr)]
NDyr_løbestald <- dat[DyrID == 12 & !duplicated(StaldID) & !StaldID %in% c(64, 65), sum(NDyr)]
View(dat)
NDyr_farestald/NDyr_løbestald
NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-KVIK/scripts")
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
#fix mismatch in names
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat <- merge.data.table(dat_VS, dat_anim)
#change som names
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
View(dat)
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
NDyr_farestald <- dat[StaldID %in% c(64, 65) & !duplicated(StaldID), sum(NDyr)]
NDyr_løbestald <- dat[DyrID == 12 & !duplicated(StaldID) & !StaldID %in% c(64, 65), sum(NDyr)]
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
frac_løbestald <- 1- frac_farestald
dat[, NDyr_mod := NDyr]
View(dat)
5209/(5209 + 1948 + 88 +3172)
1948 + 88 +3172
0.02 + 0.07 + 0.07
0.05/0.16
#make new coloumn "NDyr_mod" which can be directly multiplied with excretions to get yearly excretion.
dat[, NDyr_mod := NDyr]
dat[StaldID %in% c(64, 65), NDyr_mod := NDyr * 1/frac_farestald]
dat[!StaldID %in% c(64, 65) & DyrID == 12, NDyr_mod := 1/frac_løbestald]
View(dat)
View(dat)
View(dat)
# calculate yearly excretions on columns
cols <- c('Nabdyr', 'TANabDyr', 'GoednabDyr' )
new_cols <- paste0('Tot', cols)
dat[, new_cols := lapply(.SD, function(x) x * NDyr_mod), SDcols = cols]
dat[, new_cols := lapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
# calculate yearly excretions on columns
cols <- c('NabDyr', 'TANabDyr', 'GoednabDyr' )
new_cols <- paste0('Tot', cols)
dat[, new_cols := lapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
#fix mismatch in names
dat_anim[DyrNavn == 'Smågrise', DyrNavn := 'Smågrise, 7,5-30 kg']
dat_anim[DyrNavn == 'Slagtesvin', DyrNavn := 'Slagtesvin, 30-100,0 kg']
dat <- merge.data.table(dat_VS, dat_anim)
#change som names
old_names <- c('FirstOfAntalDyr', 'Ton gødning ab dyr', 'Tørstof pct ab dyr')
new_names <- c('NDyr', 'GoednabDyr', 'TSabDyr')
setnames(dat, old = old_names, new = new_names)
NDyr_farestald <- dat[StaldID %in% c(64, 65) & !duplicated(StaldID), sum(NDyr)]
NDyr_løbestald <- dat[DyrID == 12 & !duplicated(StaldID) & !StaldID %in% c(64, 65), sum(NDyr)]
frac_farestald <- NDyr_farestald/(NDyr_løbestald + NDyr_farestald)
frac_løbestald <- 1- frac_farestald
#make new coloumn "NDyr_mod" which can be directly multiplied with excretions to get yearly excretion.
dat[, NDyr_mod := NDyr]
dat[StaldID %in% c(64, 65), NDyr_mod := NDyr * 1/frac_farestald]
dat[!StaldID %in% c(64, 65) & DyrID == 12, NDyr_mod := 1/frac_løbestald]
# calculate yearly excretions on columns
cols <- c('NabDyr', 'TANabDyr', 'GoednabDyr' )
new_cols <- paste0('Tot', cols)
dat[, new_cols := lapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
dat[, new_cols := sapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
dat[, new_cols := apply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
dat[, new_cols := sapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
dat[, new_cols := vapply(.SD, function(x) x * NDyr_mod), .SDcols = cols]
dat[, new_cols := .SD * NDyr_mod), .SDcols = cols]
dat[, new_cols := .SD * NDyr_mod, .SDcols = cols]
length(dat$NDyr_mod)
dat[, (new_cols) := .SD * NDyr_mod, .SDcols = cols]
View(dat)
View(dat)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-KVIK/scripts")
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
dat_model <- data.table(read_excel('../model/'))
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
dat_model <- data.table(read_excel('../model/'))
dat_model <- data.table(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx'))
View(dat_model)
dat_model <- data.table(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx'))
View(dat_model)
dat_model <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')))
View(dat_model)
?read_excel
View(dat_model)
read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')
test <- read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')
View(test)
test <- t(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx'))
colnames(dat_model) <- dat_model[1, ]
dat_model <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')))
rm(list = ls())
library(data.table)
library(readxl)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
dat_model <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')))
colnames(dat_model) <- dat_model[1, ]
names(dat_model)
dat_model[1, ]
names(dat_model) <- dat_model[1, ]
names(dat_model) <- as.character(dat_model[1, ])
View(dat_model)
dat_model[-1,]
View(dat_model)
dat_model <- dat_model[-1, ]
View(dat_model)
dat_VS <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 1, skip = 1))
dat_anim <- data.table(read_excel('../data/original/Til Anders Peter og Frederik 14122023.xlsx', sheet = 2, skip = 1))
dat_model <- data.table(t(read_excel('../model/Metanproduktion_Arrhenius_v7_02012023.xlsx')))
names(dat_model) <- as.character(dat_model[1, ])
dat_model <- dat_model[-c(1:2), ]
View(dat_model)
View(dat_model)
dat_model[Scenarie == 'kontrol', .(`CH4-udledning stald, kg/t gylle ab dyr`,
`CH4-udledning stald og for/afhent.tank, kg/t gylle ab dyr`,
`CH4-udledning lager, kg/t gylle ab dyr`)]
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(cols_ab_dyr), .SDcols = cols_ab_dyr]
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(cols_ab_dyr)]
cols_ab_dyr <- c(`CH4-udledning stald, kg/t gylle ab dyr`,
`CH4-udledning stald og for/afhent.tank, kg/t gylle ab dyr`,
`CH4-udledning lager, kg/t gylle ab dyr`)
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(cols_ab_dyr)]
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(.SD), .SDcols = cols_ab_dyr]
cols_ab_dyr <- c(`CH4-udledning stald, kg/t gylle ab dyr`,
`CH4-udledning stald og for/afhent.tank, kg/t gylle ab dyr`,
`CH4-udledning lager, kg/t gylle ab dyr`)
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(.SD), .SDcols = cols_ab_dyr]
cols_ab_dyr <- c("CH4-udledning stald, kg/t gylle ab dyr",
"CH4-udledning stald og for/afhent.tank, kg/t gylle ab dyr",
"CH4-udledning lager, kg/t gylle ab dyr")
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := as.numeric(.SD), .SDcols = cols_ab_dyr]
dat_model[Scenarie == 'kontrol', (cols_ab_dyr) := lapply(.SD, as.numeric), .SDcols = cols_ab_dyr]
View(dat_model)
dat_model[Scenarie == 'kontrol', .(cols_ab_dyr) := lapply(.SD, as.numeric), .SDcols = cols_ab_dyr]
