rm(list = ls())
library(data.table)
library(ggplot2)
dat <- fread('../output/ten_day_sim.csv')
dat_flux <- fread('../output/ten_day_sim_flux.csv')
times <- c(0.1, 0.2, 0.5, 1, 5, 10)
subdat <- dat[variable == 'CH4_emis_rate' & time %in% times & zm < 2.80][, time := as.factor(time)]
CH4_dist <- ggplot(subdat, aes(value, zm, col = time)) +
geom_line() +
labs(y = 'dist from buttom, m', x = expression('CH'[4]~'production, kg m'^{-3}*'day'^{-1}), col = 'days') +
theme_bw()
png('../figures/CH4_dist.png', width = 12/2.54, height = 8/2.54, units = 'in', res = 600)
grid::grid.draw(CH4_dist)
dev.off()
rm(list = ls())
library(data.table)
library(ggplot2)
dat <- fread('../output/ten_day_sim.csv')
dat_flux <- fread('../output/ten_day_sim_flux.csv')
times <- c(0.1, 0.2, 0.5, 1, 5, 10)
subdat <- dat[variable == 'CH4_emis_rate' & time %in% times & zm < 2.80][, time := as.factor(time)]
CH4_dist <- ggplot(subdat, aes(value, zm, col = time)) +
geom_line() +
labs(y = 'dist from buttom, m', x = expression('CH'[4]~'production, kg m'^{-3}*'day'^{-1}), col = 'days') +
theme_bw()
png('../figures/CH4_dist.png', width = 12/2.54, height = 8/2.54, units = 'in', res = 600)
grid::grid.draw(CH4_dist)
dev.off()
diff_time = 0.1
subdat <- dat[variable == 'cum_CH4', .(CH4_emis = sum(value * diff_time), type = 'produced'), by = 'time']
dat_flux <- data.table(dat_flux)
dat_flux <- dat_flux[, .(time, CH4_flux, CH4_flux_cum = 0)]
for(i in 1:(nrow(dat_flux)-1)){
dat_flux[i+1, 'CH4_flux_cum'] <- dat_flux[i, CH4_flux] * (dat_flux[i+1, time] - dat_flux[i, time])
}
subdat_flux <- dat_flux[, .(CH4_emis = CH4_flux_cum, time = time, type = 'flux_cum')]
dat_join <- rbind(subdat, subdat_flux)
CH4_prod <- ggplot(dat_join, aes(time, CH4_emis, col = type)) + geom_line() +
labs(y = expression('Cumulative CH'[4]~'emission, kg'), x = 'Time, days') + theme_bw()
png('../figures/CH4_cum_flux_vs_rate.png', width = 12/2.54, height = 8/2.54, units = 'in', res = 600)
grid::grid.draw(CH4_prod)
dev.off()
#conc CH4
subdat_conc <- dat[variable == 'CH4']
dat[, depth := factor(zm, levels = sort(zm, decreasing = TRUE), labels = paste(round(sort(zm, decreasing = TRUE), 1), 'm'))]
subdat_conc[, depth := factor(zm, levels = sort(zm, decreasing = TRUE), labels = paste(round(sort(zm, decreasing = TRUE), 1), 'm'))]
slb <- 0.042 # kg m3
CH4_conc <- ggplot(subdat_conc, aes(time, y = value)) +
geom_line() +
facet_wrap(~depth) +
labs(y = expression('CH'[4]~'conc, kg m'^{-3}), time = 'Time, days') +
theme_bw() +
geom_hline(yintercept = slb, col = 'red', lty = 'dashed')
png('../figures/CH4_conc_solubility.png', width = 18/2.54, height = 16/2.54, units = 'in', res = 600)
grid::grid.draw(CH4_conc)
dev.off()
rm(list = ls())
devtools::source_url('https://raw.githubusercontent.com/AU-BCE-EE/ABM1D/R')
devtools::source_url('https://raw.githubusercontent.com/AU-BCE-EE/ABM1D/R/')
rm(list = ls())
devtools::source_url('https://raw.githubusercontent.com/AU-BCE-EE/ABM1D/R/')
devtools::source_url('https://github.com/AU-BCE-EE/ABM1D/tree/9362c428203ea0c9bb5f90f19678c05c268a3314/R/')
ABM1D_dir <- '../../../ABM1D/'
ff <- list.files(paste0(ABM1D_dir,'./R/'), full.names = T)
ABM1D_dir <- '../../../ABM1D/'
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/Kamp-2023-Tank-Temp-CH4-Modelling/ABM1D/scripts")
ff <- list.files(paste0('../../../ABM1D/R/'), full.names = T)
ff <- list.files('../../../ABM1D/R', full.names = T)
for(i in ff) source(i)
rm(list = ls())
# Load R libraries
library('ggplot2')
library('doParallel')
# Source functions
source('run_ABM1D_parl.R')
source('setup_dat.R')
source('large_parl.R')
source('interpzm.R')
source('run_parl.R')
ff <- list.files('../../../ABM1D/R', full.names = T)
for(i in ff) source(i)
layers <- 30
inp <- data.table::data.table(
avg_temp = c(F, F, T, T, F, F, T, T, F, F, T, T, F, F, F, F, F, T, T),
avg_slur = c(F, T, F, T, F, T, F, T, F, T, F, T, F, F, F, F, T, F, T),
align = c(F, F, F, F, T, T, T, T, F, F, F, F, F, F, F, T, T, T, T),
scale = c(c('full', 'full', 'full', 'full'), rep(c('large', 'large', 'large', 'large'), 2), c('large', 'large', 'large'), c('small', 'small', 'small', 'small')),
scenario = c(c('model', 'model', 'model', 'model'), rep(c('data', 'data', 'data', 'data'), 2), c('model', 'model', 'model'), c('data', 'data', 'data', 'data')),
startup = c(c(0, 0, 0, 0), rep(c(0, 0, 0, 0), 2), c(0, 0, 0), c(0, 0, 0, 0)),
parmset = c(c('A', 'A', 'A', 'A'), rep(c('','','',''), 2), c('A', 'B', 'C'), c('', '', '', '')),
refill = c(c(T, T, T, T), rep(c(F, F, F, F), 2), c(F, F, F), c(F, F, F, F))
)
inp[, layers := layers]
doParallel::registerDoParallel(cores = detectCores() - 1)
output <- foreach(avg_temp = inp[, avg_temp], avg_slur = inp[, avg_slur],
align = inp[, align], scale = inp[, scale],
scenario = inp[, scenario], startup = inp[, startup],
parmset = inp[, parmset], refill = inp[, refill], layers = inp[, layers], .combine = rbind) %dopar% {
library('readxl')
library('dplyr')
library('tidyr')
library('lubridate')
library('data.table')
library('ReacTran')
run_parl(avg_temp, avg_slur, align, scale, scenario, startup, parmset, refill, layers)
}
subdat <- dat[variable == 'TAN']
dat <- fread('../output/ten_day_sim.csv')
rm(list = ls())
library(data.table)
library(ggplot2)
dat <- fread('../output/ten_day_sim.csv')
dat <- fread('../output/ten_day_sim.csv')
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/ABM1D/script_figs")
rm(list = ls())
library(data.table)
library(ggplot2)
dat <- fread('../output/ten_day_sim.csv')
dat_flux <- fread('../output/ten_day_sim_flux.csv')
times <- c(0.1, 0.2, 0.5, 1, 5, 10)
subdat <- dat[variable %in% c('sulfide','TAN','CO2','CH4')]
View(subdat)
subdat <- dat[variable %in% c('sulfide','TAN','CO2','CH4') & time != 0]
subdat[, time := factor(time)]
ggplot(subdat, aes(x = value, y = zm, col = time))
View(subdat)
rm(list = ls())
library(data.table)
library(ggplot2)
dat <- fread('../output/ten_day_sim.csv')
dat <- fread('../output/ten_day_sim.csv')
subdat <- dat[variable %in% c('sulfide','TAN','CO2','CH4') & time != 0]
subdat[, time := factor(time)]
ggplot(subdat, aes(x = value, y = zm, col = time)) + geom_line() + facet_wrap(~round(zm,2))
times <- c(0.1, 0.2, 0.5, 1, 5, 10)
subdat <- dat[variable %in% c('sulfide','TAN','CO2','CH4') & time %in% times]
subdat[, time := factor(time)]
ggplot(subdat, aes(x = value, y = zm, col = time)) + geom_line() + facet_wrap(variable~round(zm,2))
ggplot(subdat, aes(x = value, y = zm, col = time)) + geom_line() + facet_wrap(~variable)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-SurfResp-Paper/scripts")
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/Vechi_dat.xlsx')
View(dat)
View(dat)
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.mod <- dat %>% filter(grepl('P|C',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
dat.mod
dat.mod <- dat %>% filter(grepl('P|C',Tank))# %>% group_by(month) %>%
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank))# %>% group_by(month) %>%
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
dat.mod
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T),
count = count()
)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T),
count = length(unique(temp))
)
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>% summarise(unique(month))#
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) #%>% summarise(month))#
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% summarise(count(mounth)) #group_by(month) %>% summarise(month))#
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% summarise(count(month)) #group_by(month) %>% summarise(month))#
dat.count <- dat %>% filter(!grepl('D',Tank)) # %>% summarise(count(month))
dat.count <- dat %>% filter(!grepl('D',Tank)) %>% table()# %>% summarise(count(month))
dat.count <- dat %>% filter(!grepl('D',Tank)) %>% table(month)# %>% summarise(count(month))
table(dat.count$month)
dat.count <- dat %>% filter(!grepl('D',Tank)) %>% mutate(count = table(month)) #summarise(count(month))
dat.count <- dat %>% filter(!grepl('D',Tank)) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
View(dat.mod)
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month)
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
View(dat.mod)
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = mean_month_doy)
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = mean_month_doy)$y
View(dat.mod)
View(dat.mod)
dat.mod[c(11:12)]
dat.mod[c(11:12),]
rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- int_dat$doy -  int_dat$doy[1]
int_dat$doy_cor
365-int_dat$doy
int_dat$doy_cor <- diff(int_dat$doy[1:2])
diff(int_dat$doy[1:2])
int_dat$doy - 365
int_dat$doy_cor <- int_dat$doy[1:2] - 365
int_dat$doy[1:2] - 365
c(int_dat$doy[1:2] - 365, int_dat$doy[3:4] + int_dat$doy[1:2] - 365)
int_dat$doy[3:4]
c(int_dat$doy[1:2] - 365, int_dat$doy[3:4])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = mean_month_doy)$y
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
approx(x = int_dat$doy_cor, y = int_dat$temp, xout = mean_month_doy)$y
int_dat$temp
int_dat$temp_mean_month_doy <- approx(x = int_dat$doy_cor, y = int_dat$temp, xout = mean_month_doy[1,12])$y
approx(x = int_dat$doy_cor, y = int_dat$temp, xout = mean_month_doy[1,12])$y
mean_month_doy[c(1,12)]
approx(x = int_dat$doy_cor, y = int_dat$temp, xout = mean_month_doy[c(1,12)])$y
View(int_dat)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = dat.mod$mean_month_doy)$y
dat.mod
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
int_dat$mean_month_doy_cor <- c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]) - min(c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]))
int_dat
approx(int_dat$doy_cor, int_dat$temp, xout = mean_month_doy_cor)$y
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
int_dat$mean_month_doy_cor <- c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]) - min(c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]))
int_dat$temp_mean_month_doy <- approx(int_dat$doy_cor, int_dat$temp, xout = mean_month_doy_cor)$y
int_dat$temp_mean_month_doy <- approx(int_dat$doy_cor, int_dat$temp, xout = int_dat$mean_month_doy_cor)$y
int_dat
int_dat$temp_mean_month_doy[3]
dat.mod$temp_mean_month_doy[12] <- int_dat$temp_mean_month_doy[2]
dat.mod$temp_mean_month_doy
dat.mod$temp_mean_month_doy[1] <- int_dat$temp_mean_month_doy[3]
dat.mod$temp_mean_month_doy[12] <- int_dat$temp_mean_month_doy[2]
dat.mod$temp_mean_month_doy
View(dat.mod)
dat.out <- dat.mod[, (ncol(dat.mod)-1):ncol(dat.mod)]
View(dat.out)
write.csv(dat.out, "../data/temp_dat.csv", row.names = F)
setwd("C:/Users/au277187/OneDrive - Aarhus universitet/Documents/GitHub/AU-BCE-EE/Dalby-2024-KVIK/scripts")
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/original/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.mod <- dat %>% filter(!grepl('D',Tank)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = dat.mod$mean_month_doy)$y
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
int_dat$mean_month_doy_cor <- c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]) - min(c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]))
int_dat$temp_mean_month_doy <- approx(int_dat$doy_cor, int_dat$temp, xout = int_dat$mean_month_doy_cor)$y
dat.mod$temp_mean_month_doy[1] <- int_dat$temp_mean_month_doy[3]
dat.mod$temp_mean_month_doy[12] <- int_dat$temp_mean_month_doy[2]
dat.out <- dat.mod[, (ncol(dat.mod)-1):ncol(dat.mod)]
write.csv(dat.out, "../data/temp_dat.csv", row.names = F)
plot(dat.out$mean_month_doy, dat.out$temp_mean_month_doy)
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/original/Vechi_dat.xlsx')
View(dat)
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp))# %>% group_by(month) %>%
View(dat.mod)
dat.count <- table(dat$month)
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/original/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.count <- table(dat$month)
dat.count <- table(dat$month[!is.na(dat$temp) & !grepl('D', dat$Tank)])
dat.count
which(dat.count =>1)# June only one temp -> interpolate instead.
which(dat.count >= 1)# June only one temp -> interpolate instead.
dat.count <- data.frame(table(dat$month[!is.na(dat$temp) & !grepl('D', dat$Tank)]) )
View(dat.count)
dat.count$month[(dat.count$Freq <= 1)]# June only one temp -> interpolate instead.
dat.count$month[dat.count$Freq <= 1, ]
dat.count$Freq <= 1
dat.count$month[dat.count$Freq <= 1]# June only one temp -> interpolate instead.
dat.count$Var1[dat.count$Freq <= 1]# June only one temp -> interpolate instead.
remove <- dat.count$Var1[dat.count$Freq <= 1]# June only one temp -> interpolate instead.
dat.count$Var1
remove <- dat.count$Var1[which(dat.count$Freq <= 1)]# June only one temp -> interpolate instead.
[which(dat.count$Freq <= 1)]
which(dat.count$Freq <= 1)
dat.count$Var1
dat.count$Var1[which(dat.count$Freq <= 1)]
rem <- dat.count$Var1[which(dat.count$Freq <= 1)]# June only one temp -> interpolate instead.
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp), month != rem) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp))# %>% group_by(month) %>%
View(dat.mod)
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
View(dat.mod)
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy, y = dat.mod$temp, xout = dat.mod$mean_month_doy)$y
View(dat.mod)
View(dat.mod)
dat.mod$doy[-6]
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy[-rem], y = dat.mod$temp[-rem], xout = dat.mod$mean_month_doy)$y
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/original/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.count <- data.frame(table(dat$month[!is.na(dat$temp) & !grepl('D', dat$Tank)]) )
rem <- dat.count$Var1[which(dat.count$Freq <= 1)]# June only one temp -> interpolate instead.
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy[-rem], y = dat.mod$temp[-rem], xout = dat.mod$mean_month_doy)$y
View(dat.mod)
dat.mod$doy[-rem]
rem <- as.numeric(dat.count$Var1[which(dat.count$Freq <= 1)]) # June only one temp -> interpolate instead.
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy[-rem], y = dat.mod$temp[-rem], xout = dat.mod$mean_month_doy)$y
View(dat.mod)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
# interpolate but exclude the June measurement.
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy[-rem], y = dat.mod$temp[-rem], xout = dat.mod$mean_month_doy)$y
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
int_dat$mean_month_doy_cor <- c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]) - min(c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]))
int_dat$temp_mean_month_doy <- approx(int_dat$doy_cor, int_dat$temp, xout = int_dat$mean_month_doy_cor)$y
dat.mod$temp_mean_month_doy[1] <- int_dat$temp_mean_month_doy[3]
dat.mod$temp_mean_month_doy[12] <- int_dat$temp_mean_month_doy[2]
dat.out <- dat.mod[, (ncol(dat.mod)-1):ncol(dat.mod)]
write.csv(dat.out, "../data/temp_dat.csv", row.names = F)
plot(dat.out$mean_month_doy, dat.out$temp_mean_month_doy)
mean(dat.out$temp_mean_month_doy)
rm(list = ls())
library(readxl)
library(lubridate)
library(dplyr)
#import Vechi 2023 et al. data
dat <- read_excel('../data/original/Vechi_dat.xlsx')
dat$date <- ymd(dat$date)
dat$month <- month(dat$date)
dat$doy <- as.numeric(as.Date(dat$date) - as.Date("2023-01-01"))
dat$fill <- dat$m3/dat$capacity
dat.count <- data.frame(table(dat$month[!is.na(dat$temp) & !grepl('D', dat$Tank)]) )
rem <- as.numeric(dat.count$Var1[which(dat.count$Freq <= 1)]) # June only one temp -> interpolate instead.
dat.mod <- dat %>% filter(!grepl('D',Tank), !is.na(temp)) %>% group_by(month) %>%
summarise(doy = mean(doy, na.rm = T),
temp = mean(temp, na.rm = T),
temp_sd = sd(temp, na.rm = T),
fill = mean(fill, na.rm = T)
)
# mean doy of each month
mean_month_doy <- c(15, 45, 76, 106, 137, 167, 198, 228, 259, 289, 320, 350)
dat.mod$mean_month_doy <- mean_month_doy
# interpolate but exclude the June measurement.
dat.mod$temp_mean_month_doy <- approx(x = dat.mod$doy[-rem], y = dat.mod$temp[-rem], xout = dat.mod$mean_month_doy)$y
int_dat <- rbind(dat.mod[c(11:12),],dat.mod[c(1:2),])
int_dat$doy_cor <- c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]) - min(c(int_dat$doy[1:2] - 365, int_dat$doy[3:4]))
int_dat$mean_month_doy_cor <- c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]) - min(c(int_dat$mean_month_doy[1:2] - 365, int_dat$mean_month_doy[3:4]))
int_dat$temp_mean_month_doy <- approx(int_dat$doy_cor, int_dat$temp, xout = int_dat$mean_month_doy_cor)$y
dat.mod$temp_mean_month_doy[1] <- int_dat$temp_mean_month_doy[3]
dat.mod$temp_mean_month_doy[12] <- int_dat$temp_mean_month_doy[2]
dat.out <- dat.mod[, (ncol(dat.mod)-1):ncol(dat.mod)]
write.csv(dat.out, "../data/temp_dat.csv", row.names = F)
plot(dat.out$mean_month_doy, dat.out$temp_mean_month_doy)
mean(dat.out$temp_mean_month_doy)
